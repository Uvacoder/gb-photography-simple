/**
 * Slider Styles
 */

.slider {
  // Dot Indicator Variables
  $dots:       3;
  $dotSize:    5.25;
  $dotMargin: .25;
  // Animation Variables
  $duration:     .3s;
  $timingEase:   cubic-bezier(.51, .92, .24, 1);
  $timingBounce: cubic-bezier(.51, .92, .24, 1.15);
  position: relative;
  width: 100%;
  height: 100%;

  @include min($tablet) {
    margin-top: -1em;
    margin-left: -3em;
  }

  &__slides {
    position: relative;
    height: 520px;
    transition: transform $duration $timingEase;
    will-change: transform;

    @include min($tablet) {
      height: 640px;
    }
  }

  @for $i from 0 to $dots {
    $slide : 100% / $dots;
    $left  : $slide * $i;
  }

  &__slide {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    max-width: 420px;
    will-change: transform;

    &.is-active {
      animation-name: slideToTop;
      animation-duration: 1s;
      animation-fill-mode: forwards;

      img {
        animation-name: shadowGrow;
        animation-duration: 1s;
        will-change: box-shadow;
      }
    }

    &.is-hidden {
      animation-name: slideToBack;
      animation-duration: 1s;
      animation-fill-mode: forwards;

      img {
        animation-name: shadowGrow;
        animation-duration: 1s;
        will-change: box-shadow;
      }
    }
  }
  
  &__dots {
    display: flex;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    margin-top: 2.5em;

    &--prev {
      transform: rotate(0.5deg);
      z-index: 20;
    }

    &--next {
      transform: rotate(-0.5deg);
      z-index: 10;
    }
  }

  &__dot {
    display: block;
    margin: 0 #{ $dotMargin }em;
    width: #{ $dotSize }em;
    height: 6px;
    background: rgba($white, 1);
    border-radius: 0px;
    box-shadow: 0 2px 3px rgba($primary, 0.3);
  }

  &__indicator {
    @extend .slider__dot;
    position: absolute;
    background: $primary;
    width: auto;

    &--left {
      transition: left $duration $timingBounce, right $duration $duration/3 $timingBounce;
    }

    &--right {
      transition: left $duration $duration/3 $timingBounce, right $duration $timingBounce;
    }
  }
  
  @for $i from 0 to $dots {
    $dot   : $dotSize + $dotMargin * 2;
    $left  : $dot * $i;
    $right : $dot * ($dots - $i) - $dot;

    &[data-pos="#{ $i }"] &__indicator {
      left: #{ $left }em;
      right: #{ $right }em;
    }
  }
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 4em;

  @include min($tablet) {
    margin-bottom: 0;
  }
}

.slider {
  z-index: 35;
}

@keyframes slideToTop {
  0% {
    transform: translateX(0);
  }

  50% {
    transform: translateX(240px);
  }

  80% {
    z-index: 40;
  }

  100% {
    transform: translateX(0);
    z-index: 45;
  }
}

@keyframes shadowGrow {
  0% {
    box-shadow: 0 2px 3px rgba($black, 0.3);
  }

  50% {
    box-shadow: 0 3px 8px rgba($black, .25);
  }

  100% {
    box-shadow: 0 2px 3px rgba($black, 0.3);
  }
}

@keyframes slideToBack {
  0% {
    transform: translateX(0);
    z-index: 40;
  }

  40% {
    transform: translateX(-100px);
  }

  98% {
    z-index: 30;
  }

  100% {
    transform: translateX(0);
    z-index: 30;
  }
}
